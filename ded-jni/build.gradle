

buildscript {
    repositories {
        mavenLocal()
    }
    dependencies {
        classpath ("net.freudasoft:gradle-cmake-plugin:0.0.5")

    }

}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'maven-publish'

}
apply plugin: "maven-publish"

group = 'org.woodhill'
version = '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

compileJava {
    options.compilerArgs += ["-h", "${projectDir}/build/generated/headers"]
    options.verbose = true
}


dependencies {
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testImplementation  'junit:junit:4.13'
    implementation project (':ded-cpp')
}



//task buildMyArtifact(type: Jar) {
//    // TODO using the build script as a sample file here; use whatever makes
//    //   sense for your project
//    from 'build.gradle'
//    archiveBaseName = 'whateverNameInBuildDir'
//    destinationDirectory = buildDir
//}
//
//publishing {
//    publications {
//        myPublication(MavenPublication) {
//            artifact buildMyArtifact
//            groupId 'org.woodhill'
//            artifactId 'ded-jni'
//            version '1.0.0'
//        }
//    }
//}


publishing {
    publications {
        maven(MavenPublication) {
            groupId 'org.woodhill'
            artifactId 'ded-jni'
            version '1.0-SNAPSHOT'
            from components.java
        }
    }
}



apply plugin: "net.freudasoft.gradle-cmake-plugin"
apply plugin: "c"

defaultTasks 'cmakeBuild'

tasks.test {
    useJUnit()
    environment  'LD_LIBRARY_PATH', "${projectDir}/build/cmake"
}


cmake {
    cmakeBuild.dependsOn ('compileJava')
    // optional working folder. default is ./build/cmake
    workingFolder=file("$buildDir/cmake")

    ////////////////////
    // cmakeConfigure parameters
    ////////////////////
    // optional source folder. This is where the main CMakeLists.txt file resides. Default is ./src/main/cpp
    sourceFolder=file("$projectDir/src/main/cpp")
    // optional install prefix. By default, install prefix is empty.
    installPrefix="${System.properties['user.home']}"
    // select a generator (optional, otherwise cmake's default generator is used)
    //generator='Visual Studio 15 2017'
    // set a platform for generators that support it (usually Visual Studio)
    //platform='x64'
    // set a toolset generators that support it (usually only Visual Studio)
    //toolset='v141'
    // optionally set to build static libs
    //buildStaticLibs=true
    // optionally set to build shared libs
    //buildSharedLibs=true
    // define arbitrary CMake parameters. The below adds -Dtest=hello to cmake command line.
    //def.test='hello'
    //    def.XDE_CPP_DIR='/home/alain/projects/ded-cpp-2'
    def.XDE_CPP_DIR="${rootDir}/ded-cpp"
    def.JNI_PROJECT_ROOT="${projectDir}"
    ////////////////////
    // cmakeBuild parameters
    ////////////////////
    // optional configuration to build
    buildConfig='Release'
    // optional build target
    buildTarget='install'

    // optional build clean. if set to true, calls cmake --build with --clean-first
    buildClean=false
}


compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

